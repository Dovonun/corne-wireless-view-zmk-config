/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        Qu: Qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU";
            wait-ms = <0>;
            tap-ms = <40>;
        };

        th: th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp T>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_press>,
                <&kp H>;

            label = "TH";
            tap-ms = <40>;
        };
    };

    behaviors {
        sk_mo: sk_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "SK_MO";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        tap_hold: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        lk_qu: lk_qu {
            compatible = "zmk,behavior-hold-tap";
            label = "LK_QU";
            bindings = <&kp>, <&Qu>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        typeZ {
            bindings = <&kp Z>;
            key-positions = <14 16>;
            layers = <0>;
        };

        typeQ {
            bindings = <&lk_qu Q Q>;
            key-positions = <2 4>;
            layers = <0>;
        };

        ch {
            bindings = <&kp C>;
            key-positions = <14 15>;
            layers = <0>;
        };

        th {
            bindings = <&th>;
            key-positions = <16 15>;
            layers = <0>;
        };

        wh {
            bindings = <&kt W>;
            key-positions = <2 3>;
            layers = <0>;
        };

        sh {
            bindings = <&kp S>;
            key-positions = <13 14>;
            layers = <0>;
        };

        gh {
            bindings = <&key_repeat>;
            key-positions = <4 3>;
            layers = <0>;
        };

        ph {
            bindings = <&kp P>;
            key-positions = <28 26>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB           &kp X          &kp W            &kp M                &kp G            &kp J              &kp HASH    &kp PERIOD           &kp SLASH                 &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp BSPC
&mt LCTRL ESCAPE  &hrm ESCAPE S  &hrm LEFT_ALT C  &hrm LCTRL N         &hrm LEFT_WIN T  &kp K              &kp COMMA   &hrm LEFT_WIN A      &hrm LCTRL E              &hrm LEFT_ALT I    &hrm ESCAPE H     &kp SQT
&kp LSHFT         &kp B          &kp P            &kp L                &kp D            &kp V              &kp MINUS   &kp U                &kp O                     &kp Y              &kp F             &kp ESC
                                                  &sk_mo 1 LEFT_SHIFT  &kp R            &lt 2 BACKSPACE    &kp DELETE  &tap_hold TAB SPACE  &tap_hold ENTER C_REPEAT
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6   &kp N7        &kp N8   &kp N9  &kp N0  &trans
&trans     &trans  &trans  &trans  &trans  &trans       &trans   &kp N4        &kp N5   &kp N6  &kp N0  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &trans       &trans   &kp NUMBER_1  &kp N2   &kp N3  &trans  &trans
                           &trans  &trans  &kp SPACE    &kp RET  &kp N0        &kp DOT
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET  &kp AMPS    &kp KP_MULTIPLY  &kp LPAR   &kp RPAR       &kp BSPC
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT   &kp UP      &kp DOWN         &kp RIGHT  &kp PAGE_UP    &kp GRAVE
&kp LSHFT  &bt BT_CLR    &trans        &trans        &trans        &trans          &kp UNDER  &kp DOLLAR  &kp LBRC         &kp RBRC   &kp PAGE_DOWN  &kp TILDE
                                       &kp LGUI      &trans        &trans          &kp RET    &trans      &kp RALT
            >;
        };
    };
};
